"use strict";(self.webpackChunkottoman_documentation=self.webpackChunkottoman_documentation||[]).push([[3313],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},i=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,k=u["".concat(d,".").concat(c)]||u[c]||m[c]||l;return n?a.createElement(k,o(o({ref:t},i),{},{components:n})):a.createElement(k,o({ref:t},i))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1632:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={id:"Document",title:"Class: Document",sidebar_label:"Document",sidebar_position:0,custom_edit_url:null},o=void 0,s={unversionedId:"api/classes/Document",id:"api/classes/Document",title:"Class: Document",description:"Document class represents a database document and provides useful methods to work with.",source:"@site/docs/api/classes/Document.md",sourceDirName:"api/classes",slug:"/api/classes/Document",permalink:"/docs/api/classes/Document",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"Document",title:"Class: Document",sidebar_label:"Document",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"DateType",permalink:"/docs/api/classes/DateType"},next:{title:"EmbedType",permalink:"/docs/api/classes/EmbedType"}},d={},p=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Indexable",id:"indexable",level:2},{value:"Accessors",id:"accessors",level:2},{value:"$isNew",id:"isnew",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Methods",id:"methods",level:2},{value:"_applyData",id:"_applydata",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"_depopulate",id:"_depopulate",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"_getId",id:"_getid",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"_getIdField",id:"_getidfield",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"_populate",id:"_populate",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"_populated",id:"_populated",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"_validate",id:"_validate",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"remove",id:"remove",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"save",id:"save",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"toJSON",id:"tojson",level:3},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"toObject",id:"toobject",level:3},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-11",level:4}],i={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Document class represents a database document and provides useful methods to work with."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import { connect, model } from "ottoman";\nconnect("couchbase://localhost/travel-sample@admin:password");\n\n// Create an `User` model\nconst User = model(\'User\', { name: String });\n\n// Create a document from the `User` Model\nconst jane = new User({ name: "Jane Doe" })\n')),(0,r.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Document"))),(0,r.kt)("p",{parentName:"li"},"\u21b3 ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Model"},(0,r.kt)("inlineCode",{parentName:"a"},"Model"))))),(0,r.kt)("h2",{id:"indexable"},"Indexable"),(0,r.kt)("p",null,"\u25aa ","[key: ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"]",": ",(0,r.kt)("inlineCode",{parentName:"p"},"any")),(0,r.kt)("h2",{id:"accessors"},"Accessors"),(0,r.kt)("h3",{id:"isnew"},"$isNew"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"$isNew"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Boolean flag specifying if the document is new."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const CardSchema = new Schema({\n  cardNumber: { type: String, immutable: true },\n  zipCode: String,\n});\n\n// Create model\nconst Card = model('Card', CardSchema);\n\n// Create document\nconst myCard = new Card({ cardNumber: '4321 4321 4321 4321', zipCode: '43210' });\nmyCard.$isNew; // true\n\n// Save document\nconst myCardSaved = await myCard.save();\nmyCardSaved.$isNew; // false\n")),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L615"},"model/document.ts:615")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"_applydata"},"_","applyData"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"_applyData"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"strategy?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Document"},(0,r.kt)("inlineCode",{parentName:"a"},"Document"))),(0,r.kt)("p",null,"Allows to easily apply data from an object to current document."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const user = new User({ name: "John Doe" });\n\nuser._applyData({ name: "Jane Doe" });\nconsole.log(user) // { name: "Jane Doe" }\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("p",null,"With strategies on immutable properties"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const User = model('Card', { name: { type: String, immutable: true } });\nconst user = new User({ name: 'John Doe' });\n\n // with strategy:false is like above example\n user._applyData({ name: 'Jane Doe' }, false);\n console.log(user); // { name: \"Jane Doe\" }\n\n // with strategy:true remains immutable\n user._applyData({ name: 'Jane Doe' }, true);\n console.log(user); // { name: \"John Doe\" }\n\n // trying to update it directly\n user.name = 'Jane Doe';\n console.log(user); // { name: \"John Doe\" }\n\n // with strategy:CAST_STRATEGY.THROW\n user._applyData({ name: 'Jane Doe' }, CAST_STRATEGY.THROW);\n // ImmutableError: Field 'name' is immutable and current cast strategy is set to 'throw'\n")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"any")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"strategy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ApplyStrategy")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"true"))))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Document"},(0,r.kt)("inlineCode",{parentName:"a"},"Document"))),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L524"},"model/document.ts:524")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"_depopulate"},"_","depopulate"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"_depopulate"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"fieldsName"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Document"},(0,r.kt)("inlineCode",{parentName:"a"},"Document"))),(0,r.kt)("p",null,"Reverts population. Switches back document reference."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("p",null,"To get in context about the Card and Issue Models ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/document.html"},"see the populate example."),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const card = await Card.findById(cardId);\nconsole.log(card.issues); // ['issueId']\n\nawait card._populate('issues')\nconsole.log(card.issues); // [{ id: 'issueId', title: 'Broken card' }]\n\ncard._depopulate('issues')\nconsole.log(card.issues); // ['issueId']\n")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fieldsName")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Document"},(0,r.kt)("inlineCode",{parentName:"a"},"Document"))),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L440"},"model/document.ts:440")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"_getid"},"_","getId"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"_getId"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Returns id value, useful when working with dynamic ID_KEY."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"  console.log(user._getId()); // 'userId'\n  console.log(user.id); // 'userId'\n")),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L124"},"model/document.ts:124")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"_getidfield"},"_","getIdField"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"_getIdField"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Returns id key."),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L131"},"model/document.ts:131")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"_populate"},"_","populate"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"_populate"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"fieldsName?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Document"},(0,r.kt)("inlineCode",{parentName:"a"},"Document")),">"),(0,r.kt)("p",null,"Allows to load document references."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("p",null,"Getting context to explain populate."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// Defining the schemas\nconst addressSchema = new Schema({\n  address: String,\n});\nconst personSchema = new Schema({\n  name: String,\n  age: Number,\n  address: { type: addressSchema, ref: 'Address' },\n});\nconst companySchema = new Schema({\n  president: { type: personSchema, ref: 'Person' },\n  ceo: { type: personSchema, ref: 'Person' },\n  name: String,\n  workers: [{ type: personSchema, ref: 'Person' }],\n});\n\n// Initializing the models\nconst Address = model('Address', addressSchema);\nconst Person = model('Person', personSchema);\nconst Company = model('Company', companySchema);\n\n// Adding some data\nconst johnAddress = await Address.create({ address: '13 Washington Square S, New York, NY 10012, USA' });\nconst john = await Person.create({ name: 'John Smith', age: 52, address: johnAddress });\n\nconst janeAddress = await Address.create({ address: '55 Clark St, Brooklyn, NY 11201, USA' });\nconst jane = await Person.create({ name: 'Jane Doe', age: 45, address: janeAddress });\n\nconst company = await Company.create({ name: 'Space X', president: john, ceo: jane });\n\n// Getting saved company data\nconst spaceX = await Company.findById(company.id);\nconsole.log(`Company: `, company);\n")),(0,r.kt)("p",null,"Will get:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Company: {\n    name: 'Space X',\n    president: '50e85ac9-5b4f-4587-aeb6-b287527794c9',\n    ceo: '32c2e85a-cc91-4db2-935f-f7d2768168de',\n    id: 'd59efbdf-4b7e-4d2f-a986-6e8451f22822',\n    _type: 'Company'\n}\n")),(0,r.kt)("p",null,"Now we will see how the _populate methods works."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await spaceX._populate('ceo');\nconsole.log(`Result: `, result);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Result: {\n  name: 'Space X',\n  president: '50e85ac9-5b4f-4587-aeb6-b287527794c9',\n  ceo: {\n    name: 'Jane Doe',\n    age: 45,\n    address: '235dd441-b445-4b88-b6aa-2ce35a958a32',\n    id: '32c2e85a-cc91-4db2-935f-f7d2768168de',\n    _type: 'Person'\n  },\n  id: 'd59efbdf-4b7e-4d2f-a986-6e8451f22822',\n  _type: 'Company'\n}\n")),(0,r.kt)("p",null,"Can also pass an array or a string separated by a comma"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await spaceX._populate('ceo,president');\n// or\nconst result = await spaceX._populate(['ceo', 'president']);\nconsole.log(`Result: `, result);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Result: {\n  name: 'Space X',\n  president: {\n    name: 'John Smith',\n    age: 52,\n    address: 'bc7ea8a8-8d1c-4ab6-990c-d3a0163f7e10',\n    id: '50e85ac9-5b4f-4587-aeb6-b287527794c9',\n    _type: 'Person'\n  },\n  ceo: {\n    name: 'Jane Doe',\n    age: 45,\n    address: '235dd441-b445-4b88-b6aa-2ce35a958a32',\n    id: '32c2e85a-cc91-4db2-935f-f7d2768168de',\n    _type: 'Person'\n  },\n  id: 'd59efbdf-4b7e-4d2f-a986-6e8451f22822',\n  _type: 'Company'\n}\n")),(0,r.kt)("p",null,"If you want to get only a portion of the object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await spaceX._populate({\n  ceo: ['age', 'address'], // or 'age,addres'\n  president: 'name',\n});\nconsole.log(`Result: `, result);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Result: {\n  name: 'Space X',\n  president: { name: 'John Smith' },\n  ceo: { age: 45, address: '235dd441-b445-4b88-b6aa-2ce35a958a32' },\n  id: 'd59efbdf-4b7e-4d2f-a986-6e8451f22822',\n  _type: 'Company'\n}\n")),(0,r.kt)("p",null,"Now let's to go deeper"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await spaceX._populate(\n  {\n    ceo: {\n      select: 'age,id', // remember you can use ['age','address']\n      populate: 'address', // will populate all the fields\n    },\n    president: {\n      select: 'name',\n      populate: {\n        address: 'address', // will populate address field only\n      },\n    },\n  },\n  2, // for populate up to the second level\n);\nconsole.log(`Result: `, result);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Result: {\n  name: 'Space X',\n  president: {\n    name: 'John Smith',\n    address: { address: '13 Washington Square S, New York, NY 10012, USA' }\n  },\n  ceo: {\n    age: 45,\n    id: '32c2e85a-cc91-4db2-935f-f7d2768168de',\n    address: {\n      address: '55 Clark St, Brooklyn, NY 11201, USA',\n      id: '235dd441-b445-4b88-b6aa-2ce35a958a32',\n      _type: 'Address'\n    }\n  },\n  id: 'd59efbdf-4b7e-4d2f-a986-6e8451f22822',\n  _type: 'Company'\n}\n")),(0,r.kt)("p",null,"Below is another way through the find functions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await Company.findOne(\n  { name: 'Space X' },\n  {\n    select: 'president,ceo',\n    populate: {\n      president: { select: 'address,id', populate: 'address' },\n      ceo: { select: ['age', 'name'], populate: { address: { select: 'id' } } },\n    },\n    populateMaxDeep: 2,\n  },\n);\nconsole.log(`Result: `, result);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Result: {\n  ceo: {\n    age: 45,\n    name: 'Jane Doe',\n    address: { id: '235dd441-b445-4b88-b6aa-2ce35a958a32' }\n  },\n  president: {\n    address: {\n      address: '13 Washington Square S, New York, NY 10012, USA',\n      id: 'bc7ea8a8-8d1c-4ab6-990c-d3a0163f7e10',\n      _type: 'Address'\n    },\n    id: '50e85ac9-5b4f-4587-aeb6-b287527794c9'\n  }\n}\n")),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fieldsName?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"PopulateFieldsType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"PopulateOptionsType"))))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Document"},(0,r.kt)("inlineCode",{parentName:"a"},"Document")),">"),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L418"},"model/document.ts:418")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"_populated"},"_","populated"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"_populated"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"fieldName"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Allows to know if a document field is populated."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("p",null,"To get in context about the Card and Issue Models ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/document.html"},"see the populate example."),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const card = await Card.findById(cardId);\nconsole.log(card.issues); // ['issueId']\nconsole.log(card._populated('issues')); // false\n\nawait card._populate('issues')\nconsole.log(card.issues); // [{ id: 'issueId', title: 'Broken card' }]\nconsole.log(card._populated('issues')); // true\n")),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"fieldName")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L480"},"model/document.ts:480")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"_validate"},"_","validate"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"_validate"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"any")),(0,r.kt)("p",null,"Runs schema validations over current document."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const user = new User( { name: "John Doe" } );\n\ntry {\n  await user._validate()\n} catch(errors) {\n  console.log(errors)\n}\n')),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"any")),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L568"},"model/document.ts:568")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"remove"},"remove"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"remove"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("p",null,"Removes the document from the database."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const user = User.findById('userId')\n\nawait user.remove();\n")),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"removeOptions"))))),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L208"},"model/document.ts:208")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"save"},"save"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"save"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"onlyCreate?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("p",null,"Saves or Updates the document."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const user = new User({ name: "John Doe" }); //user document created, it\'s not saved yet\n\nawait user.save(); // user saved into the DB\n\n// You also can force save function to only create new Documents by passing true as argument\nawait user.save(true); // ensure to execute a insert operation\n')),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"onlyCreate")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"false"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/interfaces/saveOptions"},(0,r.kt)("inlineCode",{parentName:"a"},"saveOptions"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"{}"))))),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L148"},"model/document.ts:148")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tojson"},"toJSON"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"toJSON"),"(): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Document"},(0,r.kt)("inlineCode",{parentName:"a"},"Document"))),(0,r.kt)("p",null,"Returns a Javascript object to be serialized to JSON"),(0,r.kt)("h4",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Document"},(0,r.kt)("inlineCode",{parentName:"a"},"Document"))),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L582"},"model/document.ts:582")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"toobject"},"toObject"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"toObject"),"(): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Document"},(0,r.kt)("inlineCode",{parentName:"a"},"Document"))),(0,r.kt)("p",null,"Returns a Javascript object with data"),(0,r.kt)("h4",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Document"},(0,r.kt)("inlineCode",{parentName:"a"},"Document"))),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/903ad0f/src/model/document.ts#L575"},"model/document.ts:575")))}m.isMDXComponent=!0}}]);