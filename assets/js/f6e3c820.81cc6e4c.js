"use strict";(self.webpackChunkottoman_documentation=self.webpackChunkottoman_documentation||[]).push([[6058],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},o=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),m=s(n),k=r,N=m["".concat(d,".").concat(k)]||m[k]||u[k]||l;return n?a.createElement(N,i(i({ref:t},o),{},{components:n})):a.createElement(N,i({ref:t},o))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2901:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={id:"Query",title:"Class: Query",sidebar_label:"Query",sidebar_position:0,custom_edit_url:null},i=void 0,p={unversionedId:"api/classes/Query",id:"api/classes/Query",title:"Class: Query",description:"Hierarchy",source:"@site/docs/api/classes/Query.md",sourceDirName:"api/classes",slug:"/api/classes/Query",permalink:"/docs/api/classes/Query",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"Query",title:"Class: Query",sidebar_label:"Query",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Ottoman",permalink:"/docs/api/classes/Ottoman"},next:{title:"QueryGroupByParamsException",permalink:"/docs/api/classes/QueryGroupByParamsException"}},d={},s=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Overrides",id:"overrides",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"_collection",id:"_collection",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"_conditions",id:"_conditions",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"groupByExpr",id:"groupbyexpr",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"havingExpr",id:"havingexpr",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"indexName",id:"indexname",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"indexOn",id:"indexon",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"indexType",id:"indextype",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"indexUsingGSI",id:"indexusinggsi",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"indexWith",id:"indexwith",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"letExpr",id:"letexpr",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"lettingExpr",id:"lettingexpr",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"limitExpr",id:"limitexpr",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"offSetExpr",id:"offsetexpr",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"orderExpr",id:"orderexpr",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"plainJoinExpr",id:"plainjoinexpr",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"queryType",id:"querytype",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"selectExpr",id:"selectexpr",level:3},{value:"Defined in",id:"defined-in-17",level:4},{value:"useKeysExpr",id:"usekeysexpr",level:3},{value:"Defined in",id:"defined-in-18",level:4},{value:"whereExpr",id:"whereexpr",level:3},{value:"Defined in",id:"defined-in-19",level:4},{value:"Accessors",id:"accessors",level:2},{value:"collection",id:"collection",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"conditions",id:"conditions",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"Methods",id:"methods",level:2},{value:"build",id:"build",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Overrides",id:"overrides-1",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"compileFromConditions",id:"compilefromconditions",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"execute",id:"execute",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"groupBy",id:"groupby",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"having",id:"having",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"index",id:"index",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"let",id:"let",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Overrides",id:"overrides-2",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"letting",id:"letting",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"limit",id:"limit",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Overrides",id:"overrides-3",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"offset",id:"offset",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Overrides",id:"overrides-4",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"on",id:"on",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"orderBy",id:"orderby",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Overrides",id:"overrides-5",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"plainJoin",id:"plainjoin",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"select",id:"select",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Overrides",id:"overrides-6",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"useKeys",id:"usekeys",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Overrides",id:"overrides-7",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"usingGSI",id:"usinggsi",level:3},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"where",id:"where",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Overrides",id:"overrides-8",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"with",id:"with",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-41",level:4}],o={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"BaseQuery")),(0,r.kt)("p",{parentName:"li"},"\u21b3 ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Query"))))),(0,r.kt)("h2",{id:"constructors"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new Query"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"conditions"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"collection"),")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Summary"))),(0,r.kt)("p",null,"Create an instance of Query."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Name"))),(0,r.kt)("p",null,"Query"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const query = new Query({\n $select: [{ $field: 'address' }],\n $where: {\n   $nill: [\n     { address: { $like: '%57-59%' } },\n     { free_breakfast: true },\n     { free_lunch: [1] }\n   ]\n  }\n },\n 'travel-sample');\n")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"conditions")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/interfaces/IConditionExpr"},(0,r.kt)("inlineCode",{parentName:"a"},"IConditionExpr"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"List of SELECT clause conditions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"collection")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Collection name")))),(0,r.kt)("h4",{id:"overrides"},"Overrides"),(0,r.kt)("p",null,"BaseQuery.constructor"),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L118"},"query/query.ts:118")),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"_collection"},"_","collection"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,r.kt)("strong",{parentName:"p"},"_","collection"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,r.kt)("p",null,"BaseQuery.","_","collection"),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/base-query.ts#L14"},"query/base-query.ts:14")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"_conditions"},"_","conditions"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,r.kt)("strong",{parentName:"p"},"_","conditions"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/interfaces/IConditionExpr"},(0,r.kt)("inlineCode",{parentName:"a"},"IConditionExpr"))),(0,r.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,r.kt)("p",null,"BaseQuery.","_","conditions"),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/base-query.ts#L14"},"query/base-query.ts:14")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"groupbyexpr"},"groupByExpr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"groupByExpr"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"IGroupBy"),"[]"),(0,r.kt)("p",null,"GROUP BY Expression."),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L50"},"query/query.ts:50")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"havingexpr"},"havingExpr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"havingExpr"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules#logicalwhereexpr"},(0,r.kt)("inlineCode",{parentName:"a"},"LogicalWhereExpr")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("p",null,"HAVING Expression."),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L58"},"query/query.ts:58")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexname"},"indexName"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"indexName"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Index name."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L83"},"query/query.ts:83")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexon"},"indexOn"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"indexOn"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/interfaces/IIndexOnParams"},(0,r.kt)("inlineCode",{parentName:"a"},"IIndexOnParams")),"[]"),(0,r.kt)("p",null,"INDEX ON Expression."),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L75"},"query/query.ts:75")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indextype"},"indexType"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"indexType"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules#indextype"},(0,r.kt)("inlineCode",{parentName:"a"},"IndexType"))),(0,r.kt)("p",null,"Types of supported Index statements."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L79"},"query/query.ts:79")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexusinggsi"},"indexUsingGSI"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"indexUsingGSI"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"INDEX USING GSI Expression."),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L87"},"query/query.ts:87")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"indexwith"},"indexWith"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"indexWith"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/interfaces/IIndexWithParams"},(0,r.kt)("inlineCode",{parentName:"a"},"IIndexWithParams"))),(0,r.kt)("p",null,"INDEX WITH Expression."),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L91"},"query/query.ts:91")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"letexpr"},"letExpr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"letExpr"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules#letexprtype"},(0,r.kt)("inlineCode",{parentName:"a"},"LetExprType"))),(0,r.kt)("p",null,"LET Expression."),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L46"},"query/query.ts:46")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"lettingexpr"},"lettingExpr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"lettingExpr"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules#letexprtype"},(0,r.kt)("inlineCode",{parentName:"a"},"LetExprType"))),(0,r.kt)("p",null,"LETTING Expression."),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L54"},"query/query.ts:54")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"limitexpr"},"limitExpr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"limitExpr"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"LIMIT Expression."),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L38"},"query/query.ts:38")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"offsetexpr"},"offSetExpr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"offSetExpr"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"OFFSET Expression."),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L42"},"query/query.ts:42")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"orderexpr"},"orderExpr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"orderExpr"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules#sorttype"},(0,r.kt)("inlineCode",{parentName:"a"},"SortType")),">"),(0,r.kt)("p",null,"ORDER BY Expression."),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L34"},"query/query.ts:34")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"plainjoinexpr"},"plainJoinExpr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"plainJoinExpr"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Plain JOIN Expression."),(0,r.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L63"},"query/query.ts:63")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"querytype"},"queryType"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"queryType"),": ",(0,r.kt)("inlineCode",{parentName:"p"},'"INDEX"')," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},'"SELECT"')),(0,r.kt)("p",null,"Available query types."),(0,r.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L71"},"query/query.ts:71")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"selectexpr"},"selectExpr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"selectExpr"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules#iselecttype"},(0,r.kt)("inlineCode",{parentName:"a"},"ISelectType")),"[]"),(0,r.kt)("p",null,"SELECT Expression."),(0,r.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L26"},"query/query.ts:26")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usekeysexpr"},"useKeysExpr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"useKeysExpr"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,r.kt)("p",null,"USE Expression."),(0,r.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L67"},"query/query.ts:67")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"whereexpr"},"whereExpr"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,r.kt)("strong",{parentName:"p"},"whereExpr"),": ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/modules#logicalwhereexpr"},(0,r.kt)("inlineCode",{parentName:"a"},"LogicalWhereExpr")),"<",(0,r.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,r.kt)("p",null,"WHERE Expression."),(0,r.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L30"},"query/query.ts:30")),(0,r.kt)("h2",{id:"accessors"},"Accessors"),(0,r.kt)("h3",{id:"collection"},"collection"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"collection"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L735"},"query/query.ts:735")),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," ",(0,r.kt)("strong",{parentName:"p"},"collection"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L739"},"query/query.ts:739")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"conditions"},"conditions"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"conditions"),"(): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/interfaces/IConditionExpr"},(0,r.kt)("inlineCode",{parentName:"a"},"IConditionExpr"))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/interfaces/IConditionExpr"},(0,r.kt)("inlineCode",{parentName:"a"},"IConditionExpr"))),(0,r.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L727"},"query/query.ts:727")),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," ",(0,r.kt)("strong",{parentName:"p"},"conditions"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/interfaces/IConditionExpr"},(0,r.kt)("inlineCode",{parentName:"a"},"IConditionExpr")))))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L731"},"query/query.ts:731")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"build"},"build"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"build"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Build a N1QL query from the defined parameters."),(0,r.kt)("p",null,"Can also use ",(0,r.kt)("inlineCode",{parentName:"p"},"ignoreCase")," as part of the ",(0,r.kt)("inlineCode",{parentName:"p"},"build")," method, this will always prioritize the ",(0,r.kt)("inlineCode",{parentName:"p"},"$ignoreCase")," value defined in clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const expr_where = {\n  $or: [\n    { address: { $like: '%57-59%', $ignoreCase: false } }, // ignoreCase will not be applied\n    { free_breakfast: true },\n    { name: 'John' } //  ignoreCase will be applied\n  ],\n};\nconst query = new Query({}, 'travel-sample');\nconst result = query.select([{ $field: 'address' }])\n   .where(expr_where)\n   .build({ ignoreCase: true }); // ignore case is enabled for where clause elements\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT address\nFROM `travel-sample`\nWHERE (address LIKE "%57-59%" OR free_breakfast = true OR `(LOWER(name) = LOWER("John"))`)\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"QueryBuildOptionsType"))))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("h4",{id:"overrides-1"},"Overrides"),(0,r.kt)("p",null,"BaseQuery.build"),(0,r.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L668"},"query/query.ts:668")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"compilefromconditions"},"compileFromConditions"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"compileFromConditions"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"conditionals"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Converts the conditional parameters passed to the constructor to the properties of the N1QL Query."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"conditionals")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/interfaces/IConditionExpr"},(0,r.kt)("inlineCode",{parentName:"a"},"IConditionExpr")))))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L597"},"query/query.ts:597")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"execute"},"execute"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"execute"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Result"),">","(",(0,r.kt)("inlineCode",{parentName:"p"},"options?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"queryOptions?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ottomanInstance?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"QueryResult"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Result"),">",">"," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Result"),">"),(0,r.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Result")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"any"))))),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"options")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"QueryBuildOptionsType"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"queryOptions")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"QueryOptions"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ottomanInstance")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/classes/Ottoman"},(0,r.kt)("inlineCode",{parentName:"a"},"Ottoman")))))),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"QueryResult"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Result"),">",">"," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"Result"),">"),(0,r.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L719"},"query/query.ts:719")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"groupby"},"groupBy"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"groupBy"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add GROUP BY expression to SELECT clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const groupByExpr = [{ expr: 'COUNT(amount_val)', as: 'amount' }];\nconst query = new Query({}, 'travel-sample');\nconst result = query.select([{ $field: 'address' }])\n   .groupBy(groupByExpr)\n   .build()\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT address\nFROM `travel-sample`\nGROUP BY COUNT(amount) AS amount\n")),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"IGroupBy"),"[]")))),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L508"},"query/query.ts:508")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"having"},"having"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"having"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add HAVING expression to GROUP BY clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const groupByExpr = [{ expr: 'COUNT(amount_val)', as: 'amount' }];\nconst having = { address: { $like: '%58%' } };\nconst query = new Query({}, 'travel-sample');\nconst result = query.select([{ $field: 'address' }])\n   .groupBy(groupByExpr)\n   .having(having)\n   .build()\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT address\nFROM `travel-sample`\nGROUP BY COUNT(amount) AS amount\nHAVING address LIKE '%58%'\n")),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules#logicalwhereexpr"},(0,r.kt)("inlineCode",{parentName:"a"},"LogicalWhereExpr")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L563"},"query/query.ts:563")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"index"},"index"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"index"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"name"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add index type and name to INDEX clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const result = new Query({}, 'travel-sample')\n .index('DROP', 'travel_sample_id_test')\n .build();\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DROP INDEX `travel-sample`.`travel_sample_id_test`\n")),(0,r.kt)("h4",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules#indextype"},(0,r.kt)("inlineCode",{parentName:"a"},"IndexType")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L173"},"query/query.ts:173")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"let"},"let"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"let"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add LET expression to SELECT clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// SELECT expression definition\nconst selectExpr = 't1.airportname, t1.geo.lat, t1.geo.lon, t1.city, t1.type';\n\n// LET expression definition\nconst letExpr: LetExprType = {\n  min_lat: 71,\n  max_lat: 'ABS(t1.geo.lon)*4+1',\n  place: '(SELECT RAW t2.country FROM `travel-sample` t2 WHERE t2.type = \"landmark\")',\n};\n\n// WHERE expression definition\nconst whereExpr: LogicalWhereExpr = {\n  $and: [\n    { 't1.type': 'airport' },\n    { 't1.geo.lat': { $gt: { $field: 'min_lat' } } },\n    { 't1.geo.lat': { $lt: { $field: 'max_lat' } } },\n    { 't1.country': { $in: { $field: 'place' } } },\n  ],\n};\n\n// QUERY creation\nconst query = new Query({}, 'travel-sample t1')\n .select(selectExpr)\n .let(letExpr)\n .where(whereExpr)\n .build();\n\nconsole.log(query);\n\n// QUERY output\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT t1.airportname,\n       t1.geo.lat,\n       t1.geo.lon,\n       t1.city,\n       t1.type\nFROM `travel-sample` t1\nLET min_lat=71,\n    max_lat=ABS(t1.geo.lon)*4+1,\n    place=(\n        SELECT RAW t2.country\n        FROM `travel-sample` t2\n        WHERE t2.type = "landmark")\nWHERE (t1.type="airport"\n        AND t1.geo.lat>min_lat\n        AND t1.geo.lat<max_lat\n        AND t1.country IN place);\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"// OTTOMAN initialization\nconst ottoman = getDefaultInstance();\nawait startInTest(ottoman);\n\n// QUERY execution\nconst { rows } = await ottoman.query(query);\n\n// RESULTS\nconsole.log(rows)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"[\n  {\n    airportname: 'Wiley Post Will Rogers Mem',\n    city: 'Barrow',\n    lat: 71.285446,\n    lon: -156.766003,\n    type: 'airport',\n  },\n  {\n    airportname: 'Dillant Hopkins Airport',\n    city: 'Keene',\n    lat: 72.270833,\n    lon: 42.898333,\n    type: 'airport',\n  },\n]\n")),(0,r.kt)("h4",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules#letexprtype"},(0,r.kt)("inlineCode",{parentName:"a"},"LetExprType")))))),(0,r.kt)("h4",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"overrides-2"},"Overrides"),(0,r.kt)("p",null,"BaseQuery.let"),(0,r.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L483"},"query/query.ts:483")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"letting"},"letting"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"letting"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add LETTING expression to GROUP BY clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const groupByExpr = [{ expr: 'COUNT(amount_val)', as: 'amount' }];\nconst letExpr = { amount_val: 10 };\nconst query = new Query({}, 'travel-sample');\nconst result = query.select([{ $field: 'address' }])\n   .groupBy(groupByExpr)\n   .let(letExpr)\n   .build()\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT address\nFROM `travel-sample`\nGROUP BY COUNT(amount) AS amount LETTING amount = 10\n")),(0,r.kt)("h4",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules#letexprtype"},(0,r.kt)("inlineCode",{parentName:"a"},"LetExprType")))))),(0,r.kt)("h4",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L535"},"query/query.ts:535")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"limit"},"limit"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"limit"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add LIMIT expression to SELECT clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const query = new Query({}, 'travel-sample');\nconst result = query.select([{ $field: 'address' }])\n   .limit(10)\n   .build()\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT address\nFROM `travel-sample`\nLIMIT 10\n")),(0,r.kt)("h4",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"overrides-3"},"Overrides"),(0,r.kt)("p",null,"BaseQuery.limit"),(0,r.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L366"},"query/query.ts:366")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"offset"},"offset"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"offset"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add OFFSET expression to SELECT clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const query = new Query({}, 'travel-sample');\nconst result = query.select([{ $field: 'address' }])\n   .offset(10)\n   .build()\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT address\nFROM `travel-sample`\nOFFSET 10\n")),(0,r.kt)("h4",{id:"parameters-12"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"overrides-4"},"Overrides"),(0,r.kt)("p",null,"BaseQuery.offset"),(0,r.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L390"},"query/query.ts:390")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"on"},"on"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"on"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add items to ON clause in INDEX clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const on = [{ name: 'travel-sample.callsing', sort: 'ASC' }];\nconst result = new Query({}, 'travel-sample')\n   .index('CREATE', 'travel_sample_id_test')\n   .on(on)\n   .build();\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE INDEX `travel_sample_id_test` ON `travel-sample` (`travel-sample.callsing`['ASC'])\n")),(0,r.kt)("h4",{id:"parameters-13"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/interfaces/IIndexOnParams"},(0,r.kt)("inlineCode",{parentName:"a"},"IIndexOnParams")),"[]")))),(0,r.kt)("h4",{id:"returns-14"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L206"},"query/query.ts:206")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"orderby"},"orderBy"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"orderBy"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add ORDER BY expression to SELECT clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const query = new Query({}, 'travel-sample');\nconst result = query.select([{ $field: 'address' }])\n   .orderBy({ size: 'DESC' })\n   .build()\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT address\nFROM `travel-sample`\nORDER BY size = 'DESC'\n")),(0,r.kt)("h4",{id:"parameters-14"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Record"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules#sorttype"},(0,r.kt)("inlineCode",{parentName:"a"},"SortType")),">")))),(0,r.kt)("h4",{id:"returns-15"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"overrides-5"},"Overrides"),(0,r.kt)("p",null,"BaseQuery.orderBy"),(0,r.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L342"},"query/query.ts:342")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"plainjoin"},"plainJoin"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"plainJoin"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add JOIN expression to SELECT clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tS"},"const query = new Query({}, 'beer-sample brewery');\nconst result = query.select([{ $field: 'address' }])\n   .plainJoin(\n       'JOIN `beer-sample` beer ON beer.brewery_id = LOWER(REPLACE(brewery.name, \" \", \"_\"))'\n    )\n   .build()\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT beer.name\nFROM `beer-sample` brewery\nJOIN `beer-sample` beer ON beer.brewery_id = LOWER(REPLACE(brewery.name, " ", "_"))\n')),(0,r.kt)("h4",{id:"parameters-15"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"returns-16"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L318"},"query/query.ts:318")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"select"},"select"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"select"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add result selectors to SELECT clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const query = new Query({}, 'travel-sample');\nconst result = query.select([{ $field: 'address' }]).build()\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT address\nFROM `travel-sample`\n")),(0,r.kt)("h4",{id:"parameters-16"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules#iselecttype"},(0,r.kt)("inlineCode",{parentName:"a"},"ISelectType")),"[]")))),(0,r.kt)("h4",{id:"returns-17"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"overrides-6"},"Overrides"),(0,r.kt)("p",null,"BaseQuery.select"),(0,r.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L141"},"query/query.ts:141")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usekeys"},"useKeys"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"useKeys"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add USE KEYS expression to SELECT clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const query = new Query({}, 'travel-sample');\nconst result = query.select([{ $field: 'address' }])\n   .useKeys(['airlineR_8093'])\n   .build()\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT address\nFROM `travel-sample` USE KEYS ['airlineR_8093']\n")),(0,r.kt)("h4",{id:"parameters-17"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"),"[]")))),(0,r.kt)("h4",{id:"returns-18"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"overrides-7"},"Overrides"),(0,r.kt)("p",null,"BaseQuery.useKeys"),(0,r.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L586"},"query/query.ts:586")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"usinggsi"},"usingGSI"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"usingGSI"),"(): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Create INDEX using General Secondary Index (GSI)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const result = new Query({}, 'travel-sample')\n   .index('CREATE', 'travel_sample_id_test')\n   .usingGSI()\n   .build();\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE INDEX `travel_sample_id_test` USING GSI\n")),(0,r.kt)("h4",{id:"returns-19"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L231"},"query/query.ts:231")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"where"},"where"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"where"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add WHERE expression to SELECT clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const expr_where = {\n  $or: [\n    { address: { $like: '%57-59%' } },\n    { free_breakfast: true },\n    { name: { $eq: 'John', $ignoreCase: true } }\n  ]\n};\nconst query = new Query({}, 'travel-sample');\nconst result = query.select([{ $field: 'address' }])\n   .where(expr_where)\n   .build()\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT address\nFROM `travel-sample`\nWHERE (address LIKE "%57-59%" OR free_breakfast = true OR (LOWER(name) = LOWER("John")))\n')),(0,r.kt)("h4",{id:"parameters-18"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/modules#logicalwhereexpr"},(0,r.kt)("inlineCode",{parentName:"a"},"LogicalWhereExpr")),"<",(0,r.kt)("inlineCode",{parentName:"td"},"any"),">")))),(0,r.kt)("h4",{id:"returns-20"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"overrides-8"},"Overrides"),(0,r.kt)("p",null,"BaseQuery.where"),(0,r.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L292"},"query/query.ts:292")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"with"},"with"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"with"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("p",null,"Add items to WITH clause in INDEX clause."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Method"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const withExpr = { nodes: ['192.168.1.1:8078'], defer_build: true, num_replica: 2 };\nconst result = new Query({}, 'travel-sample')\n   .index('CREATE', 'travel_sample_id_test')\n   .with(withExpr)\n   .build();\nconsole.log(result)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE INDEX `travel_sample_id_test`\nWITH {'nodes': ['192.168.1.1:8078'],'defer_build': true,'num_replica': 2}\n")),(0,r.kt)("h4",{id:"parameters-19"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"value")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/docs/api/interfaces/IIndexWithParams"},(0,r.kt)("inlineCode",{parentName:"a"},"IIndexWithParams")))))),(0,r.kt)("h4",{id:"returns-21"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/docs/api/classes/Query"},(0,r.kt)("inlineCode",{parentName:"a"},"Query"))),(0,r.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/fc2f2ba/src/query/query.ts#L258"},"query/query.ts:258")))}u.isMDXComponent=!0}}]);