"use strict";(self.webpackChunkottoman_documentation=self.webpackChunkottoman_documentation||[]).push([[5707],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4250:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={id:"SearchConsistency",title:"Enumeration: SearchConsistency",sidebar_label:"SearchConsistency",sidebar_position:0,custom_edit_url:null},o=void 0,s={unversionedId:"api/enums/SearchConsistency",id:"api/enums/SearchConsistency",title:"Enumeration: SearchConsistency",description:"Enumeration Members",source:"@site/docs/api/enums/SearchConsistency.md",sourceDirName:"api/enums",slug:"/api/enums/SearchConsistency",permalink:"/docs/api/enums/SearchConsistency",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"SearchConsistency",title:"Enumeration: SearchConsistency",sidebar_label:"SearchConsistency",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Exports",permalink:"/docs/api/modules"},next:{title:"VALIDATION_STRATEGY",permalink:"/docs/api/enums/VALIDATION_STRATEGY"}},l={},c=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"GLOBAL",id:"global",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"LOCAL",id:"local",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"NONE",id:"none",level:3},{value:"Defined in",id:"defined-in-2",level:4}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,i.kt)("h3",{id:"global"},"GLOBAL"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"GLOBAL")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"2")),(0,i.kt)("p",null,"Operations performed by any client of the Couchbase Server up to the\ntime of the queries dispatch will be reflected in any index results.\nThis is the slowest of all consistency levels as it requires that the\nserver synchronize its indexes to the current key-value state prior to\nexecution of the query.\nCalled as  REQUEST_PLUST in Couchbase Server"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/ea85b6a/src/utils/search-consistency.ts#L26"},"utils/search-consistency.ts:26")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"local"},"LOCAL"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"LOCAL")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"1")),(0,i.kt)("p",null,"Operations performed by this ottoman instance will be reflected\nin queries performed by this particular ottoman instance.  This\ntype of consistency will be slower than no consistency, but faster\nthan GLOBAL as the index state is tracked internally rather than\nrequested from the server.\nCalled as AT_PLUS in Couchbase Server"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/ea85b6a/src/utils/search-consistency.ts#L16"},"utils/search-consistency.ts:16")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"none"},"NONE"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"NONE")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("p",null,"No degree consistency required.\nCalled as NOT_BOUNDED in Couchbase Server."),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/couchbaselabs/node-ottoman/blob/ea85b6a/src/utils/search-consistency.ts#L6"},"utils/search-consistency.ts:6")))}p.isMDXComponent=!0}}]);