swagger: "2.0"
info:
  description: "This is a sample server Travel-Sample"
  version: "1.0.0"
  title: "Swagger Travel-Sample"
host: "localhost:4500"
basePath: "/"
tags:
- name: "airport"
  description: "Everything about your Airports"
- name: "hotels"
  description: "Everything about your Hotels"
- name: "flights"
  description: "Everything about your Flights"
schemes:
- "http"
paths:
  /airports:
    post:
      tags:
      - "airport"
      summary: "Add a new airport to the travel-sample bucket"
      description: ""
      operationId: "addAirport"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Airport object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Airport"
      responses:
        "400":
          description: "Invalid input"
    get:
      tags:
      - "airport"
      summary: "List of airport"
      description: ""
      operationId: "listAirport"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "number"
      - name: "skip"
        in: "query"
        required: false
        type: "number"
      - name: "search"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ListAirportsResponse"
        "400":
          description: "Invalid username/password supplied"
    
  /airports/{id}:
    put:
      tags:
      - "airport"
      summary: "Replace an existing airport"
      description: ""
      operationId: "replaceAirport"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of airport to replace"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Airport object that needs to be replaced"
        required: true
        schema:
          $ref: "#/definitions/Airport"
      responses:
        "400":
          description: "InvalidValidation exception"
        "404":
          description: "document not found"
        "500":
          description: "Server fails"
    patch:
      tags:
      - "airport"
      summary: "Update an existing airport"
      description: ""
      operationId: "updateAirport"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of airport to replace"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Airport object that needs to be replaced"
        required: true
        schema:
          $ref: "#/definitions/Airport"
      responses:
        "400":
          description: "InvalidValidation exception"
        "404":
          description: "document not found"
        "500":
          description: "Server fails"
    get:
      tags:
      - "airport"
      summary: "Find airport by ID"
      description: "Returns a single airport"
      operationId: "getAirportById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of airport to return"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Airport"
        "404":
          description: "document not found"
    delete:
      tags:
      - "airport"
      summary: "Deletes a airport"
      description: ""
      operationId: "deleteAirport"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Airport id to delete"
        required: true
        type: "string"
        format: "uuid"
      responses:
        "404":
          description: "document not found"
  /hotels:
    post:
      tags:
        - "hotels"
      summary: "Add a new hotel to the travel-sample bucket"
      description: ""
      operationId: "addHotel"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Hotel object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/Hotel"
      responses:
        "400":
          description: "Invalid input"
    get:
      tags:
        - "hotels"
      summary: "List of hotel"
      description: ""
      operationId: "listHotel"
      produces:
        - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        required: false
        type: "number"
      - name: "skip"
        in: "query"
        required: false
        type: "number"
      - name: "search"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ListHotelsResponse"
        "400":
          description: "Invalid username/password supplied"
  /hotels/{id}:
    put:
      tags:
        - "hotels"
      summary: "Replace an existing airport"
      description: ""
      operationId: "replaceAirport"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of airport to replace"
        required: true
        type: "string"
        format: "uuid"
      - in: "body"
        name: "body"
        description: "Airport object that needs to be replaced"
        required: true
        schema:
          $ref: "#/definitions/Hotel"
      responses:
        "400":
          description: "InvalidValidation exception"
        "404":
          description: "document not found"
        "500":
          description: "Server fails"
    patch:
      tags:
        - "hotels"
      summary: "Update an existing hotel"
      description: ""
      operationId: "updateHotel"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of hotel to replace"
          required: true
          type: "string"
          format: "uuid"
        - in: "body"
          name: "body"
          description: "Hotel object that needs to be replaced"
          required: true
          schema:
            $ref: "#/definitions/Hotel"
      responses:
        "400":
          description: "InvalidValidation exception"
        "404":
          description: "document not found"
        "500":
          description: "Server fails"
    get:
      tags:
        - "hotels"
      summary: "Find hotel by ID"
      description: "Returns a single hotel"
      operationId: "getHotelById"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of hotel to return"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Hotel"
        "404":
          description: "document not found"
    delete:
      tags:
        - "hotels"
      summary: "Deletes a hotel"
      description: ""
      operationId: "deleteHotel"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "Hotel id to delete"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "404":
          description: "document not found"
  /flightPaths:
    post:
      tags:
        - "flights"
      summary: "Add a new hotel to the travel-sample bucket"
      description: ""
      operationId: "addFlightPaths"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Flight object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/Route"
      responses:
        "400":
          description: "Invalid input"
    get:
      tags:
        - "flights"
      summary: "List of flight"
      description: ""
      operationId: "listHotel"
      produces:
        - "application/json"
      parameters:
        - name: "limit"
          in: "query"
          required: false
          type: "number"
        - name: "skip"
          in: "query"
          required: false
          type: "number"
        - name: "from"
          in: "query"
          required: true
          type: "string"
        - name: "to"
          in: "query"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ListFlightResponse"
        "400":
          description: "Invalid username/password supplied"
  /flightPaths/{id}:
    put:
      tags:
        - "flights"
      summary: "Replace an existing flight"
      description: ""
      operationId: "replaceFlights"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of flight to replace"
          required: true
          type: "string"
          format: "uuid"
        - in: "body"
          name: "body"
          description: "Flight object that needs to be replaced"
          required: true
          schema:
            $ref: "#/definitions/Route"
      responses:
        "400":
          description: "InvalidValidation exception"
        "404":
          description: "document not found"
        "500":
          description: "Server fails"
    patch:
      tags:
        - "flights"
      summary: "Update an existing flight"
      description: ""
      operationId: "updateFlight"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of flight to replace"
          required: true
          type: "string"
          format: "uuid"
        - in: "body"
          name: "body"
          description: "Flight object that needs to be replaced"
          required: true
          schema:
            $ref: "#/definitions/Route"
      responses:
        "400":
          description: "InvalidValidation exception"
        "404":
          description: "document not found"
        "500":
          description: "Server fails"
    get:
      tags:
        - "flights"
      summary: "Find flight by ID"
      description: "Returns a single flight"
      operationId: "getFlightById"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of flight to return"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Route"
        "404":
          description: "document not found"
    delete:
      tags:
        - "hotels"
      summary: "Deletes a flight"
      description: ""
      operationId: "deleteFlight"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "Flight id to delete"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "404":
          description: "document not found"
definitions:
  Geolocation:
    type: "object"
    properties:
      alt:
        type: "number"
        example: 12
      lat:
        type: "number"
        example: 50.962097
      lon:
        type: "number"
        example: 1.954764
      accuracy:
        type: "string"
        example: "APPROXIMATE"
  Airport:
    type: "object"
    required:
    - "airportname"
    - "city"
    - "country"
    properties:
      id:
        type: "string"
        format: "uuid"
      airportname:
        type: "string"
        example: "Calais Dunkerque"
      city:
        type: "string"
        example: "Calais"
      country:
        type: "string"
        example: "France"
      tz:
        type: "string"
        example: "Europe/Paris"
      icao: 
        type: "string"
        example: "LFAC"
      faa:
        type: "string"
        example: "CQF"
      geo:
        $ref: "#/definitions/Geolocation"
  Review:
    type: "object"
    properties:
      author:
        type: "string"
        example: "Tessie Vandervort"
      content:
        type: "string"
        example: "The Chancellor Hotel is a wonderful hotel. Its location is fabulous - right on the Powell Street Cable Car Line and in the heart of Union Square, and its easy to get to all San Fran has to offer. The Staff are excellent and bend over backwards to help you in any way they can. The rooms are clean and nicely decorated and a pillow menu is even offered to guests!! I felt very welcolme and comfortable in the Chancellor and recommend it to everyone visiting San Fransisco."
      date:
        type: "string"
        example: "2015-08-21 23:42:23 +0300"
      ratings:
        type: "object"
        properties:
          Cleanliness:
            type: "number"
            example: 5
          Overall:
            type: "number"
            example: 5
          Rooms:
            type: "number"
            example: 5
          Service:
            type: "number"
            example: 5
          Value:
            type: "number"
            example: 5
  Hotel:
    type: "object"
    properties:
      address: 
        type: "string"
        example: "580 Beach St"
      alias:
        type: "string"
      checkin:
        type: "string"
        example: "3PM"
      checkout:
        type: "string"
        example: "noon"
      city:
        type: "string"
        example: "San Francisco"
      country:
        type: "string"
        example: "United States"
      description:
        type: "string"
        example: "Part of the Marriott group, this non-smoking, four story hotel is just 2 blocks from Ghirardelli Square."
      directions:
        type: "string"
        example: "between Mason St and Taylor St"
      email:
        type: "string"
      fax:
        type: "string"
        example: "+1 415 441-7307"
      free_breakfast":
        type: "boolean"
        example: true
      free_internet:
        type: "boolean"
        example: true
      free_parking:
        type: "boolean"
        example: true
      geo:
        type: "object"
        $ref: "#/definitions/Geolocation"
      id:
        type: "string"
        example: "hotel_25667"
      name:
        type: "string"
        example: "Courtyard Fisherman's Wharf"
      pets_ok:
        type: "boolean"
        example: false
      phone:
        type: "string"
        example: "+1 415 775-3800"
      price:
        type: "string"
        example: "$210-$290"
      public_likes:
        type: "array"
        items:
          type: "string"
        example:
          - "Marietta Glover"
          - "Herminia Krajcik"
      reviews:
        type: "array"
        items:
          $ref: "#/definitions/Review"
      state:
        type: "string"
        example: "California"
      title:
        type: "string"
        example: "San Francisco/Fisherman's Wharf"
      tollfree:
        type: "boolean"
      type:
        type: "string"
        example: "hotel"
      url:
        type: "string"
        example: "http://www.marriott.com/hotels/travel/sfocf-courtyard-san-francisco-fishermans-wharf/"
      vacancy:
        type: "boolean"
        example: true
  Schedule:
    type: "object"
    properties:
      day:
        type: "enum"
        values: ["0", "1", "2", "3", "4", "5", "6"]
      fligth:
        type: "string"
        example: "AF288"
      utc:
        type: "string"
        "example": "05:02:00"
  Route:
    type: "object"
    properties:
      airline:
        type: "string"
        example: "AF"
      airlineid:
        type: "string"
        example: "airline_137"
      destinationairport:
        type: "string"
        example: "ATL"
      distance:
        type: "number"
        example: 365.28208402314306
      equipment:
        type: "string"
        example: "CRJ"
      id:
        type: "string"
        example: "route_10006"
      schedule:
        type: "array"
        items:
          $ref: '#/definitions/Schedule'
      sourceairport:
        type: "string"
        example: "TRI"
      stops:
        type: "number"
        example: 0
      type:
        type: "string"
        example: "route"
  ListAirportsResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Airport"
  ListHotelsResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Hotel"
  ListFlightResponse:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/Route"